[{"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Carousel/Create/index.js":"1","/Users/graham_bates/Documents/Dev/beatroute_react/src/App.js":"2","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Cards/Sketch/index.js":"3","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Deck/layers/CustomPathLayer/path-layer/path.js":"4","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Carousel/CarouselActions.js":"5","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Deck/index.js":"6","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Carousel/index.js":"7","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Carousel/Slide/Frame/index.js":"8","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Adder/AddFront/index.js":"9","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Deck/layers/TapeLayer/index.js":"10","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Adder/AddSketch/index.js":"11","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Saver/index.js":"12","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Deck/Carousel/index.js":"13","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Adder/AddTitle/index.js":"14","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Cards/Front/AddGPS/saver.js":"15","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Cards/Sketch/Label/index.js":"16"},{"size":891,"mtime":1612704980543,"results":"17","hashOfConfig":"18"},{"size":6373,"mtime":1612780005268,"results":"19","hashOfConfig":"18"},{"size":1629,"mtime":1612782559228,"results":"20","hashOfConfig":"18"},{"size":784,"mtime":1594352688000,"results":"21","hashOfConfig":"18"},{"size":297,"mtime":1612439894000,"results":"22","hashOfConfig":"18"},{"size":8095,"mtime":1612779411557,"results":"23","hashOfConfig":"18"},{"size":2072,"mtime":1612705657396,"results":"24","hashOfConfig":"18"},{"size":1759,"mtime":1612779660811,"results":"25","hashOfConfig":"18"},{"size":791,"mtime":1609549432000,"results":"26","hashOfConfig":"18"},{"size":5631,"mtime":1612046172000,"results":"27","hashOfConfig":"18"},{"size":1755,"mtime":1612611854048,"results":"28","hashOfConfig":"18"},{"size":4262,"mtime":1612615304471,"results":"29","hashOfConfig":"18"},{"size":1611,"mtime":1612218042000,"results":"30","hashOfConfig":"18"},{"size":769,"mtime":1609549452000,"results":"31","hashOfConfig":"18"},{"size":646,"mtime":1612779669780,"results":"32","hashOfConfig":"18"},{"size":221,"mtime":1612783493056,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"3cvbxk",{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Carousel/Create/index.js",["72","73","74"],"import React, {useState, useEffect, Fragment} from 'react';\nimport gql from \"graphql-tag\";\nimport {Mutation} from \"react-apollo\";\n\nconst INSERT_SLIDE = gql`\n    mutation MyMutation($card_id : Int) {\n    \n      insert_slides(objects: {card_id: $card_id}) {\n        returning {\n          id\n        }\n      }\n    }\n`;\n\nexport default function ({card, refetch, setSlideIndex}) {\n\n\n\n    return (\n\n        <div>\n\n            <Mutation\n                onError={() => alert('Could not add slide')}\n                onCompleted={()=> {refetch(); }}\n                mutation={INSERT_SLIDE}\n            >\n\n                {(add, {loading, error}) => {\n\n                    return <Fragment>\n                        <button onClick={() => {add({variables : {card_id : card.id}})}}>New slide</button>\n                    </Fragment>\n\n                }}\n            </Mutation>\n\n\n        </div>\n\n    );\n}\n","/Users/graham_bates/Documents/Dev/beatroute_react/src/App.js",["75","76","77","78","79"],"import React, { Fragment, useRef, useEffect, useState } from 'react';\nimport { gsap } from \"gsap\";\nimport './App.less';\n\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\nimport Measure from 'react-measure'\n\nimport { ApolloClient, InMemoryCache, HttpLink } from 'apollo-boost';\n\nimport { ApolloProvider } from \"react-apollo\";\n\nimport { Query } from \"react-apollo\";\n\nimport gql from \"graphql-tag\";\n\nimport * as portals from 'react-reverse-portal';\n\nimport {coordEach} from '@turf/meta';\n\n//import Landscape  from \"./Components/Landscape\";\nimport Deck       from \"./Components/Deck\";\n\nimport Front        from \"./Components/Cards/Front\";\nimport Title        from \"./Components/Cards/Title\";\nimport Sketch     from \"./Components/Cards/Sketch\";\nimport Polaroids  from \"./Components/Cards/Polaroids/HTML\";\n\nimport CardAdder from './Components/Adder';\nimport SimpleRichTextEditor from \"./Components/Cards/Title/Editor\";\n//import CarouselExample from './Components/Carousel/CarouselExample';\n\nconst GETCARD = gql`\n               {\n                owners(where: {id: {_eq: \"cyclefriendly\"}}) {\n                  id\n                  \n                  trips(where: {url: {_eq: \"lakes2021\"}}) {\n                    id\n                    name\n                    url\n                    geojson\n                    cards(order_by: {id: asc}) {\n                      id\n                      html\n                      type\n                      map\n                      title\n                      text\n                      camera\n                      content\n                      annotations\n                      landscapecamera\n                      geojson\n                      \n                     slides(order_by: {id: asc}) {\n                        camera\n                        id\n                        text\n                      }\n                      \n                      assets(where: {type: {_eq: \"PHOTO\"}}) {\n                        data\n                      }\n                    }\n                  }\n                }\n              }\n\n`\n\nconst useContainerDimensions = myRef => {\n  const getDimensions = () => ({\n    width: myRef.current.offsetWidth,\n    height: myRef.current.offsetHeight\n  })\n\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 })\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions(getDimensions())\n    }\n\n    if (myRef.current) {\n      setDimensions(getDimensions())\n    }\n\n    window.addEventListener(\"resize\", handleResize)\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize)\n    }\n  }, [myRef])\n\n  return dimensions;\n};\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst httpLink = new HttpLink({ uri: 'https://beatroute2019.herokuapp.com/v1/graphql' });\n\nconst client = new ApolloClient({ link: (httpLink), cache: new InMemoryCache() });\n\nconst App = () => {\n\n  const portalNode2 = React.useMemo(() => portals.createHtmlPortalNode(), []);\n\n  const [loadedCount, setLoadedCount] = useState(0);\n\n  const admin = true;\n\n  //return <SimpleRichTextEditor/>\n return (\n    <div className=\"App\">\n\n      <ApolloProvider client={client}>\n\n        <Query query={GETCARD}  >\n          {({ loading, error, data, refetch  }) => {\n\n            if (loading || !data) return null\n\n            const trip  = data.owners[0].trips[0];\n            const cards = data.owners[0].trips[0].cards;\n            const stillLoading = loadedCount < cards.length;\n\n            trip.cards.forEach(c => {\n              coordEach(c.geojson, function(coords) {\n                if (coords.length > 2) coords.pop();\n              });\n\n            });\n\n            return <Fragment>\n\n              <Measure bounds>\n\n                {({ measureRef, contentRect: { bounds: { width }} }) => (\n\n                  <main className=\"App-main\">\n\n                  <portals.InPortal node={portalNode2}>\n\n                    <div> this is one time component</div>\n                      {/*updateCard will be overwritten when called in Sketch*/}\n                      {/*<Deck trip={trip} width={width} updateCard={() => alert(\"not implemented\")}/>*/}\n                  </portals.InPortal>\n\n                    {cards.map((card, i) => {\n\n                      if (card.type === 'Front') {\n                        return <div className=\"App-section\" key={i} >\n                                {admin && <code>{card.id}</code>}\n                                 <Front key={i + '' + card.id} trip={trip} card={card} index={i}/>\n                               </div>\n                      }\n\n                      if (card.type === 'Title') {\n                        return <div className=\"App-section\" key={i} >\n                          {admin && <code>{card.id}</code>}\n                          <Title key={i + '' + card.id} card={card} i={i}/>\n                        </div>\n                      }\n\n                      if (true && card.type === 'Sketch') {\n\n                        return  <div className=\"App-section\" key={i} >\n                          { admin && <code>{JSON.stringify(card.id)}</code>}\n                          <Sketch trip={trip} portalNode2={portalNode2} width={width < 500 ? width : 500} admin={admin} stillLoading={stillLoading} incrementLoadedCount={() => setLoadedCount(loadedCount + 1)} key={i + '' + card.id} index={i} card={card} refetch={refetch}/>\n                        </div>\n                      }\n\n                      if (card.type === 'Polaroid') {\n\n                        return  <div className=\"App-section\" key={i} >\n                          {admin && <code>{card.id}</code>}\n                          <Polaroids width={width < 500 ? width : 500} admin={admin} stillLoading={stillLoading} incrementLoadedCount={() => setLoadedCount(loadedCount + 1)} key={i + '' + card.id} index={i} card={card} refetch={refetch}/>\n                        </div>\n                      }\n\n                      return null;\n                    })}\n\n                    <div className=\"App-section\" style={{height : '100%'}}>\n                      <CardAdder trip={trip} refetch={refetch}/>\n                    </div>\n\n                    <div ref={measureRef}>My width is {width}</div>\n\n\n\n                  </main>\n\n                  )}\n              </Measure>\n\n            </Fragment>\n\n          }}\n\n        </Query>\n\n      </ApolloProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Cards/Sketch/index.js",["80","81","82"],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Deck/layers/CustomPathLayer/path-layer/path.js",[],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Carousel/CarouselActions.js",["83"],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Deck/index.js",["84","85","86","87","88","89","90","91","92","93","94"],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Carousel/index.js",["95","96","97","98","99"],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Carousel/Slide/Frame/index.js",["100","101","102","103","104"],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Adder/AddFront/index.js",["105","106"],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Deck/layers/TapeLayer/index.js",["107","108","109"],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Adder/AddSketch/index.js",["110","111"],"import React, {Fragment} from 'react';\nimport {Mutation} from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst ADD = gql`\n\nmutation ($content : jsonb, $camera : jsonb, $polaroid_camera : jsonb, $trip_id : Int) {\n\n  insert_cards(objects: [\n                {trip_id: $trip_id, type: \"Sketch\", content : $content, slides : {data : [{camera : $camera}]}},\n              \n                ]) {\n    returning {\n      id\n    }\n  }\n}\n\n\n\n`;\n\nconst camera = {\"zoom\":3.0129167754311057,\"pitch\":0, \"bearing\":0,\"maxZoom\":20,\"minZoom\":0,\"altitude\":1.5,\"latitude\":8.256043799900645,\"maxBearing\":0,\"minBearing\":0,\"longitude\":2.6226391365730866};\nconst content = {\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0,0],[4,0],[4,4],[0,4],[0,0]]]},\"properties\":{\"type\":\"map\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[-1.845703125,2.0210651187669897]},\"properties\":{\"type\":\"photo\"}}]};\n\nconst polaroid_camera = {\"zoom\":2.0340441946918117,\"target\":[21.82497956377069,41.576120620825634, 0],\"maxZoom\":20,\"minZoom\":0,\"orbitAxis\":\"Z\",\"rotationX\":0,\"maxRotationX\":90,\"minRotationX\":-90,\"rotationOrbit\":0};\n\nexport default ({trip, refetch}) => {\n\n    return <div>\n\n        <Mutation\n            onError={() => alert('Could not add sketch card')}\n            onCompleted={() => refetch()}\n            mutation={ADD}\n            variables={{content : content, camera : camera, trip_id : trip.id, polaroid_camera : polaroid_camera}}\n        >\n\n            {(add, {loading, error}) => {\n\n                return <wired-button elevation=\"2\" onClick={ add }>\n                            Add Sketch and photos {trip.name}\n                        </wired-button>\n\n            }}\n        </Mutation>\n\n    </div>\n}\n",["112","113"],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Saver/index.js",["114"],"import React, {Fragment} from 'react';\nimport {Mutation} from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst SAVE_TABLE = gql`\n\nmutation( $card_id : Int,  $camera : jsonb){\n                update_cards(where: {id: {_eq: $card_id}}, _set: {camera: $camera}) {\n                    returning {\n                                camera\n                                id\n                              }\n                    }\n                }\n`;\nconst SAVE_SLIDE = gql`\n\nmutation( $slide_id : Int,  $camera : jsonb){\n                update_slides(where: {id: {_eq: $slide_id}}, _set: {camera: $camera}) {\n                    returning {\n                                camera\n                                id\n                              }\n                    }\n                }\n`;\n\n\nconst SAVE_MAP = gql`\n\nmutation( $card_id : Int,  $map : jsonb){\n                update_cards(where: {id: {_eq: $card_id}}, _set: {map: $map}) {\n                    returning {\n                                camera\n                                id\n                              }\n                    }\n                }\n`;\n\nconst SAVE_ANNOTATION = gql`\n\nmutation( $card_id : Int,  $annotations : jsonb){\n                update_cards(where: {id: {_eq: $card_id}}, _set: {annotations: $annotations}) {\n                    returning {\n                                camera\n                                id\n                              }\n                    }\n                }\n`;\n\nconst SAVE_LANDSCAPE = gql`\n\nmutation( $card_id : Int,  $landscapecamera : jsonb){\n                update_cards(where: {id: {_eq: $card_id}}, _set: {landscapecamera: $landscapecamera}) {\n                    returning {\n                                camera\n                                id\n                              }\n                    }\n                }\n`;\n\nexport default ({refetch, children}) => {\n\n    return <div>\n\n        <Mutation\n            onError={() => alert('Could not save slide')}\n            mutation={SAVE_SLIDE}\n        >\n\n            {(updateSlide, {loading, error}) => {\n\n\n        return <Mutation\n            onError={() => alert('Could not save map')}\n            mutation={SAVE_MAP}\n        >\n\n            {(updateMap, {loading, error}) => {\n\n                return  <Mutation\n                    onError={() => alert('Could not save camera')}\n                    mutation={SAVE_TABLE}\n                >\n\n                    {(updateCamera, {loading, error}) => {\n\n                        return <Fragment>\n                                    <Mutation\n                                        onError={() => alert('Could not save camera')}\n                                        mutation={SAVE_ANNOTATION}\n                                        onCompleted={() => refetch()}\n                                    >\n\n                                        {(updateAnnotation, {loading, error}) => {\n\n                                            return <Fragment>\n                                                        <Mutation\n                                                            onError={() => alert('Could not save landscaape')}\n                                                            mutation={SAVE_LANDSCAPE}\n                                                            onCompleted={() => refetch()}\n                                                        >\n\n                                                            {(updateLandscape, {loading, error}) => {\n\n                                                                return <Fragment>\n                                                                    {children(updateSlide, updateCamera, updateMap, updateAnnotation, updateLandscape, loading, error)}\n                                                                </Fragment>\n                                                            }}\n                                                        </Mutation>\n                                            </Fragment>\n                                        }}\n                                    </Mutation>\n                        </Fragment>\n                    }}\n                </Mutation>\n\n            }}\n        </Mutation>\n\n            }}\n        </Mutation>\n\n\n    </div>\n}\n",["115","116"],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Deck/Carousel/index.js",["117"],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Adder/AddTitle/index.js",["118","119"],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Cards/Front/AddGPS/saver.js",["120"],"/Users/graham_bates/Documents/Dev/beatroute_react/src/Components/Cards/Sketch/Label/index.js",["121"],{"ruleId":"122","severity":1,"message":"123","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"122","severity":1,"message":"126","line":1,"column":26,"nodeType":"124","messageId":"125","endLine":1,"endColumn":35},{"ruleId":"127","severity":1,"message":"128","line":16,"column":1,"nodeType":"129","endLine":43,"endColumn":2},{"ruleId":"122","severity":1,"message":"130","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":33},{"ruleId":"122","severity":1,"message":"131","line":22,"column":8,"nodeType":"124","messageId":"125","endLine":22,"endColumn":12},{"ruleId":"122","severity":1,"message":"132","line":30,"column":8,"nodeType":"124","messageId":"125","endLine":30,"endColumn":28},{"ruleId":"122","severity":1,"message":"133","line":72,"column":7,"nodeType":"124","messageId":"125","endLine":72,"endColumn":29},{"ruleId":"134","severity":1,"message":"135","line":94,"column":6,"nodeType":"136","endLine":94,"endColumn":13,"suggestions":"137"},{"ruleId":"122","severity":1,"message":"138","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":32},{"ruleId":"122","severity":1,"message":"130","line":1,"column":34,"nodeType":"124","messageId":"125","endLine":1,"endColumn":40},{"ruleId":"122","severity":1,"message":"139","line":3,"column":13,"nodeType":"124","messageId":"125","endLine":3,"endColumn":20},{"ruleId":"122","severity":1,"message":"140","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"141","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":1,"column":26,"nodeType":"124","messageId":"125","endLine":1,"endColumn":34},{"ruleId":"122","severity":1,"message":"142","line":4,"column":24,"nodeType":"124","messageId":"125","endLine":4,"endColumn":42},{"ruleId":"122","severity":1,"message":"143","line":4,"column":44,"nodeType":"124","messageId":"125","endLine":4,"endColumn":61},{"ruleId":"122","severity":1,"message":"144","line":8,"column":13,"nodeType":"124","messageId":"125","endLine":8,"endColumn":17},{"ruleId":"122","severity":1,"message":"145","line":13,"column":8,"nodeType":"124","messageId":"125","endLine":13,"endColumn":17},{"ruleId":"122","severity":1,"message":"146","line":18,"column":8,"nodeType":"124","messageId":"125","endLine":18,"endColumn":16},{"ruleId":"122","severity":1,"message":"147","line":20,"column":8,"nodeType":"124","messageId":"125","endLine":20,"endColumn":23},{"ruleId":"127","severity":1,"message":"148","line":29,"column":1,"nodeType":"129","endLine":236,"endColumn":2},{"ruleId":"122","severity":1,"message":"149","line":119,"column":33,"nodeType":"124","messageId":"125","endLine":119,"endColumn":41},{"ruleId":"150","severity":1,"message":"151","line":163,"column":13,"nodeType":"152","messageId":"153","endLine":165,"endColumn":14},{"ruleId":"122","severity":1,"message":"154","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":34},{"ruleId":"122","severity":1,"message":"155","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":14},{"ruleId":"122","severity":1,"message":"156","line":5,"column":18,"nodeType":"124","messageId":"125","endLine":5,"endColumn":34},{"ruleId":"122","severity":1,"message":"143","line":5,"column":56,"nodeType":"124","messageId":"125","endLine":5,"endColumn":73},{"ruleId":"134","severity":1,"message":"157","line":35,"column":8,"nodeType":"136","endLine":35,"endColumn":28,"suggestions":"158"},{"ruleId":"122","severity":1,"message":"126","line":1,"column":26,"nodeType":"124","messageId":"125","endLine":1,"endColumn":35},{"ruleId":"122","severity":1,"message":"159","line":8,"column":8,"nodeType":"124","messageId":"125","endLine":8,"endColumn":13},{"ruleId":"127","severity":1,"message":"160","line":21,"column":1,"nodeType":"129","endLine":57,"endColumn":2},{"ruleId":"161","severity":1,"message":"162","line":39,"column":28,"nodeType":"163","endLine":39,"endColumn":43},{"ruleId":"161","severity":1,"message":"162","line":39,"column":44,"nodeType":"163","endLine":39,"endColumn":81},{"ruleId":"122","severity":1,"message":"141","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"127","severity":1,"message":"160","line":16,"column":1,"nodeType":"129","endLine":37,"endColumn":2},{"ruleId":"122","severity":1,"message":"164","line":5,"column":9,"nodeType":"124","messageId":"125","endLine":5,"endColumn":16},{"ruleId":"122","severity":1,"message":"165","line":165,"column":13,"nodeType":"124","messageId":"125","endLine":165,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":183,"column":15,"nodeType":"168","messageId":"169","endLine":183,"endColumn":19},{"ruleId":"122","severity":1,"message":"141","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"127","severity":1,"message":"160","line":28,"column":1,"nodeType":"129","endLine":49,"endColumn":2},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"127","severity":1,"message":"160","line":65,"column":1,"nodeType":"129","endLine":129,"endColumn":2},{"ruleId":"170","replacedBy":"174"},{"ruleId":"172","replacedBy":"175"},{"ruleId":"122","severity":1,"message":"176","line":2,"column":30,"nodeType":"124","messageId":"125","endLine":2,"endColumn":34},{"ruleId":"122","severity":1,"message":"141","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"127","severity":1,"message":"160","line":16,"column":1,"nodeType":"129","endLine":37,"endColumn":2},{"ruleId":"127","severity":1,"message":"160","line":17,"column":1,"nodeType":"129","endLine":29,"endColumn":12},{"ruleId":"127","severity":1,"message":"160","line":4,"column":1,"nodeType":"129","endLine":7,"endColumn":7},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useRef' is defined but never used.","'Deck' is defined but never used.","'SimpleRichTextEditor' is defined but never used.","'useContainerDimensions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDimensions'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'useLayoutEffect' is defined but never used.","'portals' is defined but never used.","'React' is defined but never used.","'Fragment' is defined but never used.","'LinearInterpolator' is defined but never used.","'FlyToInterpolator' is defined but never used.","'turf' is defined but never used.","'Landscape' is defined but never used.","'Carousel' is defined but never used.","'CarouselExample' is defined but never used.","Unexpected default export of anonymous class","'editType' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useMemo' is defined but never used.","'DeckGL' is defined but never used.","'ScatterplotLayer' is defined but never used.","React Hook useEffect has missing dependencies: 'prev' and 'slideToNextItem'. Either include them or remove the dependency array.",["178"],"'Frame' is defined but never used.","Assign arrow function to a variable before exporting as module default","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Matrix4' is defined but never used.","'self' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-native-reassign",["179"],"no-negated-in-lhs",["180"],["179"],["180"],"'Code' is defined but never used.",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getDimensions, myRef]",{"range":"185","text":"186"},"Update the dependencies array to be: [card.slides.length, prev, slideToNextItem]",{"range":"187","text":"188"},[2599,2606],"[getDimensions, myRef]",[1122,1142],"[card.slides.length, prev, slideToNextItem]"]